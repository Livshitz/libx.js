{"version":3,"file":"prompts.js","sourceRoot":"","sources":["prompts.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,MAAM,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAClC,6DAA+C;AAE/C,MAAM,GAAG,GAAQ,EAAE,CAAC;AAEpB,GAAG,CAAC,OAAO,GAAG,CACV,QAAgB,EAChB,UAAkB,YAAY,EAC9B,gBAAwB,IAAI,EAAoB,EAAE;IASlD,IAAI,CAAC,GAAG,8BAAQ,CAAC,GAAG,EAAE,CAAC;IAEvB,OAAO,CAAC,KAAK,EAAE,CAAC;IAChB,OAAO,CAAC,OAAO,GAAG,EAAE,CAAC;IACrB,OAAO,CAAC,SAAS,GAAG,EAAE,CAAC;IACvB,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;IACvB,OAAO,CAAC,GAAG,CAAC;QACR,UAAU,EAAE;YAER,OAAO,EAAE;gBAEL,OAAO,EAAE,IAAI,MAAM,CAAC,KAAK,OAAO,IAAI,EAAE,IAAI,CAAC;gBAC3C,WAAW,EAAE,QAAQ,GAAG,KAAK,OAAO,GAAG;gBACvC,OAAO,EAAE,OAAO,GAAG,OAAO;gBAC1B,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,aAAa;aACzB;SACJ;KACJ,EAAE,UAAU,GAAG,EAAE,MAAM;QACpB,IAAI,GAAG;YAAE,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAE9B,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;QACrC,IAAI,CAAC,IAAE,GAAG,IAAI,CAAC,IAAE,KAAK,EAAC;YACnB,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACjB,OAAO;SACV;QAED,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC;IAEH,OAAO,CAAC,CAAC;AACb,CAAC,CAAA,CAAA;AAED,kBAAe,GAAG,CAAC","sourcesContent":["// import prompt from 'prompt';\nconst _prompt = require('prompt');\nimport { Deferred } from 'concurrency.libx.js';\n\nconst mod: any = {};\n\nmod.confirm = async (\n    question: string, \n    pattern: string = 'yes|no|y|n', \n    defaultAnswer: string = 'no'): Promise<Boolean> => \n    {\n    \n        // Example:\n    // (async()=>{\n    //     let res = await mod.confirm('Do you really want to format the filesystem and delete all file ?');\n    //     console.log('result: ', res);\n    // })();\n\n    let p = Deferred.new();\n\n    _prompt.start();\n    _prompt.message = '';\n    _prompt.delimiter = '';\n    _prompt.colors = false;\n    _prompt.get({\n        properties: {\n            // setup the dialog\n            confirm: {\n                // allow yes, no, y, n, YES, NO, Y, N as answer\n                pattern: new RegExp(`^(${pattern})$`, 'gi'), ///^(yes|no|y|n)$/gi,\n                description: question + ` [${pattern}]`,\n                message: 'Type ' + pattern,\n                required: true,\n                default: defaultAnswer\n            }\n        }\n    }, function (err, result){\n        if (err) return p.reject(err);\n\n        var c = result.confirm.toLowerCase();\n        if (c!='y' && c!='yes'){\n            p.resolve(false);\n            return;\n        }\n        \n        p.resolve(true);\n    });\n\n    return p;\n}\n\nexport default mod;"]}