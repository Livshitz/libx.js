{"version":3,"sources":["../../src/browser/require.ts"],"names":[],"mappings":"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","file":"require.libx.min.js","sourcesContent":["// @ts-nocheck\n\nconst req = (function () {\n    // var require = libx.browser.require;\n\n    if (typeof window == 'undefined') return require;\n\n    var mod = {};\n\n    (function (load) {\n        'use strict';\n        var RequireError = function (message, fileName, lineNumber) {\n            this.name = 'RequireError';\n            this.message = message;\n        };\n        RequireError.prototype = Object.create(Error.prototype);\n\n        // NOTE Mozilla still sets the wrong fileName porperty for errors that occur\n        //      inside an eval call (even with sourceURL). However, the stack\n        //      contains the correct source, so it can be used to re-threw the error\n        //      with the correct fileName property.\n        // NOTE Re-threwing a new error object will mess up the stack trace and the\n        //      column number.\n        if (typeof new Error().fileName == 'string') {\n            self.addEventListener(\n                'error',\n                function (evt) {\n                    if (evt.error instanceof Error) {\n                        if (pwd[0]) {\n                            evt.preventDefault();\n                            throw new evt.error.constructor(evt.error.message, pwd[0].uri, evt.error.lineNumber);\n                        } else {\n                            var m = evt.error.stack.match(/^[^\\n@]*@([^\\n]+):\\d+:\\d+/);\n                            if (m === null) {\n                                console.warn('libx.browser.require: unable to read file name from stack');\n                            } else if (evt.error.fileName != m[1]) {\n                                evt.preventDefault();\n                                throw new evt.error.constructor(evt.error.message, m[1], evt.error.lineNumber);\n                            }\n                        }\n                    }\n                },\n                false\n            );\n        }\n\n        // INFO Current module descriptors\n        //      pwd[0] contains the descriptor of the currently loaded module,\n        //      pwd[1] contains the descriptor its parent module and so on.\n\n        var pwd = Array();\n\n        // INFO Path parser\n        // NOTE Older browsers don't support the URL interface, therefore we use an\n        //      anchor element as parser in that case. Thes breaks web worker support,\n        //      but we don't care since these browser also don't support web workers.\n\n        var parser = URL ? new URL(location.href) : document.createElement('A');\n\n        // INFO Module cache\n        // NOTE Contains getter functions for the exports objects of all the loaded\n        //      modules. The getter for the module 'mymod' is name '$name' to prevent\n        //      collisions with predefined object properties (see note below).\n        //      As long as a module has not been loaded the getter is either undefined\n        //      or contains the module code as a function (in case the module has been\n        //      pre-loaded in a bundle).\n        // NOTE IE8 supports defineProperty only for DOM objects, therfore we use a\n        //      HTMLDivElement as cache in that case. This breaks web worker support,\n        //      but we don't care since IE8 has no web workers at all.\n\n        try {\n            var cache = new Object();\n            Object.defineProperty(cache, 'foo', { value: 'bar', configurable: true });\n            delete cache.foo;\n        } catch (e) {\n            console.warn('Falling back to DOM workaround for defineProperty: ' + e);\n            cache = document.createElement('DIV');\n        }\n\n        // INFO Send lock\n        // NOTE Sending the request causes the event loop to continue. Therefore\n        //      pending AJAX load events for the same url might be executed before\n        //      the synchronous onLoad is called. This should be no problem, but in\n        //      Chrome the responseText of the sneaked in load events will be empty.\n        //      Therefore we have to lock the loading while executing send().\n\n        var lock = new Object();\n\n        var requirePath = mod && mod.requirePath !== undefined ? mod.requirePath.slice(0) : ['./'];\n        var requireCompiler = mod && mod.requireCompiler !== undefined ? mod.requireCompiler : null;\n\n        // NOTE Parse module root paths\n        var base = [location.origin, location.href.substr(0, location.href.lastIndexOf('/') + 1)];\n        for (var i = 0; i < requirePath.length; i++) {\n            parser.href = (requirePath[i][0] == '.' ? base[1] : base[0]) + requirePath[i];\n            requirePath[i] = parser.href;\n        }\n\n        // NOTE Add preloaded modules to cache\n        for (var id in mod && mod.requirePreloaded) cache['$' + resolve(id).id] = mod.requirePreloaded[id].toString();\n\n        // NOTE Add module overrides to cache\n        for (var id in mod && mod.requireOverrides) cache['$' + resolve(id).id] = mod.requireOverrides[id];\n\n        // INFO Module getter\n        //      Takes a module identifier, resolves it and gets the module code via an\n        //      AJAX request from the module URI. If this was successful the code and\n        //      some environment variables are passed to the load function. The return\n        //      value is the module's `exports` object. If the cache already\n        //      contains an object for the module id, this object is returned directly.\n        // NOTE If a callback function has been passed, the AJAX request is asynchronous\n        //      and the module exports are passed to the callback function after the\n        //      module has been loaded.\n\n        mod = async function (identifier, callback, compiler) {\n            return new Promise((resolvePromise, rejectPromise) => {\n                if (identifier instanceof Array) {\n                    var modules = new Array();\n                    var modcount = identifier.length;\n                    for (var index = 0; index < identifier.length; index++) {\n                        (function (id, i) {\n                            modules.push(\n                                mod(\n                                    id,\n                                    callback &&\n                                        function (mod) {\n                                            modules[i] = mod;\n                                            --modcount == 0 && callback(modules);\n                                        },\n                                    compiler\n                                )\n                            );\n                        })(identifier[index], index);\n                    }\n                    return modules;\n                }\n\n                compiler = compiler !== undefined ? compiler : requireCompiler;\n                var descriptor = resolve(identifier);\n                var cacheid = '$' + descriptor.id;\n\n                if (cache[cacheid]) {\n                    if (typeof cache[cacheid] === 'string') load(descriptor, cache, pwd, cache[cacheid]);\n                    // NOTE The callback should always be called asynchronously to ensure\n                    //      that a cached call won't differ from an uncached one.\n                    callback &&\n                        setTimeout(function () {\n                            callback(cache[cacheid]);\n                        }, 0);\n                    return resolvePromise(cache[cacheid]);\n                }\n\n                var request = new XMLHttpRequest();\n\n                // NOTE IE8 doesn't support the onload event, therefore we use\n                //      onreadystatechange as a fallback here. However, onreadystatechange\n                //      shouldn't be used for all browsers, since at least mobile Safari\n                //      seems to have an issue where onreadystatechange is called twice for\n                //      readyState 4.\n                callback && (request[request.onload === null ? 'onload' : 'onreadystatechange'] = onLoad);\n                request.addEventListener('load', onLoad);\n                request.open('GET', descriptor.uri, true); //!!callback);\n\n                try {\n                    // request.setRequestHeader('Origin', window.location.hostname);\n                    // request.setRequestHeader('Access-Control-Allow-Origin', '*');\n                    // request.setRequestHeader('Access-Control-Allow-Methods', 'GET, POST, PATCH, PUT, DELETE, OPTIONS');\n                    // request.setRequestHeader('Access-Control-Allow-Headers', 'Origin, Content-Type, X-Auth-Token');\n                } catch (ex) {\n                    console.warn('libx.require: Error setting CORS headers. ', ex);\n                }\n\n                lock[cacheid] = lock[cacheid]++ || 1;\n                request.send();\n                !callback && onLoad();\n\n                function onLoad() {\n                    try {\n                        if (request.readyState != 4) return;\n                        if (request.status != 200)\n                            new RequireError('unable to load ' + descriptor.id + ' (' + request.status + ' ' + request.statusText + ')');\n                        if (request.status == 200) lock[cacheid]--;\n                        if (lock[cacheid]) {\n                            console.warn('module locked: ' + descriptor.id);\n                            if (lock[cacheid] <= 5) return;\n                            callback && setTimeout(onLoad, 0);\n                            return;\n                        }\n                        if (!cache[cacheid]) {\n                            var source = compiler ? compiler(request.responseText) : request.responseText;\n                            load(descriptor, cache, pwd, source, typeof callback == 'boolean');\n                        }\n\n                        !callback && onLoad();\n\n                        callback && callback(cache[cacheid]);\n                        resolvePromise(cache[cacheid]);\n                    } catch (err) {\n                        rejectPromise(err);\n                    }\n                }\n            });\n        };\n\n        // INFO Module resolver\n        //      Takes a module identifier and resolves it to a module id and URI. Both\n        //      values are returned as a module descriptor, which can be passed to\n        //      `fetch` to load a module.\n\n        function fixSlash(url) {\n            var isDoubleSlash = url.startsWith('//');\n            var ret = url.replace(/[\\/]+/g, '/').replace(':/', '://'); //.replace(/\\/\\//g, '/').replace(':/', '://');\n            if (isDoubleSlash) ret = ret.replace(/^\\//, '//');\n            return ret;\n        }\n\n        function resolve(identifier) {\n            if (\n                identifier.indexOf('http://') == 0 ||\n                identifier.indexOf('https://') == 0 ||\n                identifier.indexOf('//') == 0 ||\n                identifier.indexOf('://') != -1\n            )\n                return { id: identifier, uri: fixSlash(identifier) };\n\n            if (identifier.indexOf('/') == 0) {\n                var root = requirePath[0].substr(0, requirePath[0].indexOf('/', requirePath[0].indexOf('://') + 3));\n                return { id: identifier, uri: fixSlash(root + '/' + identifier) };\n            }\n\n            return { id: identifier, uri: fixSlash(identifier) };\n\n            // NOTE Matches [1]:[..]/[path/to/][file][.js]\n            var m = identifier.match(/^(?:([^:\\/]+):)?(\\.\\.?)?\\/?((?:.*\\/)?)([^\\.]+)?(\\..*)?$/);\n            // NOTE Matches [1]:[/path/to/]file.js\n            var p = (pwd[0] ? pwd[0].id : '').match(/^(?:([^:\\/]+):)?(.*\\/|)[^\\/]*$/);\n            var root = m[2] ? requirePath[p[1] ? parseInt(p[1]) : 0] : requirePath[m[1] ? parseInt(m[1]) : 0];\n            parser.href = (m[2] ? root + p[2] + m[2] + '/' : root) + m[3] + (m[4] ? m[4] : 'index');\n            var uri = parser.href + (m[5] ? m[5] : '.js');\n            if (uri.substr(0, root.length) != root) throw new RequireError('Relative identifier outside of module root');\n            var id = (m[1] ? m[1] + ':' : '0:') + parser.href.substr(root.length);\n\n            return { id: id, uri: fixSlash(uri) };\n        }\n\n        // INFO Exporting require to global scope\n\n        if (mod !== undefined) {\n            //throw new RequireError('\\'require\\' already defined in global scope');\n            //console.warn(\"'\\'require\\' already defined in global scope'\");\n            return;\n        }\n\n        try {\n            Object.defineProperty('require', { value: mod });\n            Object.defineProperty(mod, 'resolve', { value: resolve });\n            Object.defineProperty(mod, 'path', {\n                get: function () {\n                    return requirePath.slice(0);\n                },\n            });\n        } catch (e) {\n            // NOTE IE8 can't use defineProperty on non-DOM objects, so we have to fall\n            //      back to unsave property assignments in this case.\n            mod.resolve = resolve;\n            mod.path = requirePath.slice(0);\n        }\n    })(\n        // INFO Module loader\n        //      Takes the module descriptor, the global variables and the module code,\n        //      sets up the module envirinment, defines the module getter in the cache\n        //      and evaluates the module code. If module is a bundle the code of the\n        //      pre-loaded modules will be stored in the cache afterwards.\n        // NOTE This functions is defined as an anonymous function, which is passed as\n        //      a parameter to the closure above to provide a clean environment (only\n        //      global variables, module and exports) for the loaded module. This is\n        //      also the reason why `source`, `pwd` & `cache` are not named parameters.\n        // NOTE If we would strict use mode here, the evaluated code would be forced to be\n        //      in strict mode, too.\n\n        function (/*load*/ module /*, cache, pwd, source, isNotModule*/) {\n            var global = self;\n            var exports = new Object();\n            Object.defineProperty(module, 'exports', {\n                get: function () {\n                    return exports;\n                },\n                set: function (e) {\n                    exports = e;\n                },\n            });\n            arguments[2].unshift(module);\n            Object.defineProperty(arguments[1], '$' + module.id, {\n                get: function () {\n                    return exports;\n                },\n            });\n\n            var content = arguments[3];\n            var isNotModule = arguments[4];\n\n            if (isNotModule === true) {\n                eval(content);\n            } else {\n                var extra = 'var __moduleUri = \"' + module.uri + '\";\\n';\n                if (!module.uri.endsWith('.js')) {\n                    content = 'module.exports = ' + content;\n                }\n                var script = 'function(){\\n' + extra + content + '\\n}';\n                let wrapper = '(' + script + ')();\\n//# sourceURL=' + module.uri;\n\n                eval(wrapper);\n            }\n\n            // var script = '(function(__moduleUri){\\n ('+arguments[3]+')}(); \\n'\n            // arguments[3] = '(' + extra + script+')(\"' + module.uri + '\");\\nsourceURL=\"'+module.uri+'\"';\n\n            // load(descriptor, cache, pwd, 'function(){\\n'+source+'\\n}');\n            // arguments[3] = '('+arguments[3]+')();\\n//# sourceURL='+module.uri;\n\n            // if (typeof Function != \"undefined\") new Function(arguments[3]);\n            // else\n            // NOTE Store module code in the cache if the loaded file is a bundle\n            if (typeof module.id !== 'string') for (id in module) arguments[1]['$' + mod.resolve(id).id] = module[id].toString();\n            arguments[2].shift();\n        }\n    );\n\n    return mod;\n})();\n\nif (window.libx == null) window.libx = {};\nwindow.libx.require = req;\n\nexport = req;\n"]}